name: Merge JSON Files

on:
  schedule:
    - cron: '0 0 * * *'  # This runs at 00:00 UTC every day
  push:
    branches:
      - main  # Trigger on changes to the main branch
    paths:
      - '**/*.json'  # Trigger if any JSON files are changed
    # Ensure only changes from the repository owner or contributors trigger the action
    # You can specify users by their GitHub username here (or add more users as needed)
    authors:
      - 'hamzasid020'
  workflow_dispatch:  # Keep this to allow manual triggers

jobs:
  merge-json:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jsonmerge
    
    - name: Run merge script
      run: python mergeJson.py  # First, run mergeJson.py to update data-siddiqui-family.json and locations.json

    - name: Check for changes in locations.json
      id: check_locations
      run: |
        git diff --exit-code locations.json || echo "locations.json has changed"
      
    - name: Run update-location.json if locations.json is updated
      if: steps.check_locations.outputs.stdout == 'locations.json has changed'
      run: python update-location.json  # Only run update-location.json if locations.json was changed

    - name: Commit merged files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data-siddiqui-family.json
        git add locations.json
        git commit -m "Update merged JSON files" -a || echo "No changes to commit"
    
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main  # Explicitly set your branch

    - name: Deploy to GitHub Pages (only if necessary)
      if: steps.check_locations.outputs.stdout == 'locations.json has changed' || steps.check_locations.outputs.stdout != 'locations.json has changed'
      run: |
        echo "Deploying to GitHub Pages"
        # Insert the specific steps to deploy the project to GitHub Pages here.
        # For example:
        # npm run build  # or any relevant build command
        # git push origin gh-pages
